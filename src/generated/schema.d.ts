/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users/change-password": {
    put: operations["changePassword"];
  };
  "/topics": {
    get: operations["getAllTopicsByCourseId"];
    put: operations["updateTopic"];
    post: operations["createTopic"];
  };
  "/groups/{groupId}": {
    get: operations["getGroupById"];
    put: operations["updateGroup"];
    delete: operations["deleteGroup"];
  };
  "/exercises/quiz": {
    put: operations["updateQuizExercise"];
    post: operations["createQuizExercise"];
  };
  "/exercises/file": {
    put: operations["updateFileExercise"];
    post: operations["createFileExercise"];
  };
  "/exercises/file/grade": {
    put: operations["gradeFileSubmission"];
  };
  "/exercises/essay": {
    put: operations["updateEssayExercise"];
    post: operations["createEssayExercise"];
  };
  "/exercises/essay/grade": {
    put: operations["gradeEssaySubmission"];
  };
  "/exercises/code": {
    put: operations["updateCodeExercise"];
    post: operations["createCodeExercise"];
  };
  "/exercises/code/grade": {
    put: operations["gradeCodeSubmission"];
  };
  "/courses": {
    get: operations["getAll"];
    put: operations["updateById"];
    post: operations["createOne_1"];
  };
  "/courses/students": {
    put: operations["updateStudentsInCourse"];
  };
  "/auth/change-password": {
    put: operations["updateUserPassword"];
  };
  "/users": {
    get: operations["getUsersByRoleOrAll"];
    post: operations["createUser"];
    patch: operations["updateById_1"];
  };
  "/users/import-users": {
    post: operations["importUsersByExcel"];
  };
  "/topics/view": {
    get: operations["getPublicGroups"];
    post: operations["addViewPermission"];
    delete: operations["removeViewPermission"];
  };
  "/materials": {
    post: operations["createOne"];
    patch: operations["updateByMaterialAndTopicId"];
  };
  "/materials/view": {
    post: operations["addViewPermission_1"];
    delete: operations["removeViewPermission_1"];
  };
  "/judge": {
    post: operations["exampleRq"];
  };
  "/groups": {
    post: operations["createGroup"];
  };
  "/groups/student": {
    post: operations["addStudentsToGroup"];
  };
  "/exercises/view": {
    post: operations["addPermissionExercise"];
  };
  "/exercises/quiz/submit": {
    post: operations["submitQuizExercise"];
  };
  "/exercises/file/submit": {
    post: operations["submitFileExercise"];
  };
  "/exercises/essay/submit": {
    post: operations["submitEssayExercise"];
  };
  "/exercises/detail": {
    post: operations["getExerciseDetail"];
  };
  "/exercises/code/submit": {
    post: operations["submitCodeExercise"];
  };
  "/exercises/code/run": {
    post: operations["runCodeExercise"];
  };
  "/courses/student": {
    post: operations["addStudentToCourse"];
    delete: operations["deleteById_3"];
  };
  "/courses/import-students": {
    post: operations["addStudentsToCourse"];
  };
  "/courses/import-courses": {
    post: operations["importCoursesByExcel"];
  };
  "/courses/enrollment": {
    post: operations["enrollUserToCourse"];
  };
  "/auth/send-otp": {
    post: operations["sendOTP"];
  };
  "/auth/logout": {
    post: operations["Logout"];
  };
  "/auth/login/user": {
    post: operations["signInUser"];
  };
  "/auth/login/admin": {
    post: operations["signInAdmin"];
  };
  "/auth/check-otp": {
    post: operations["checkOTP"];
  };
  "/users/{userId}": {
    get: operations["getById"];
    delete: operations["deleteById"];
  };
  "/users/get-by-user-name/{username}": {
    get: operations["getUserByUserName"];
  };
  "/topics/{topicId}": {
    get: operations["getTopic"];
    delete: operations["deleteTopic"];
  };
  "/topics/user/{userId}": {
    get: operations["getTopicByUserId"];
  };
  "/ping": {
    get: operations["pingAPI"];
  };
  "/materials/{materialId}": {
    get: operations["getById_1"];
    delete: operations["deleteById_1"];
  };
  "/materials/topic/{topicId}": {
    get: operations["getMaterialsByTopicId"];
  };
  "/groups/{groupId}/student/not-in-group": {
    get: operations["getStudentNotInGroup"];
  };
  "/groups/{groupId}/student/in-group": {
    get: operations["getStudentInGroup"];
  };
  "/groups/course/{courseId}": {
    get: operations["getGroupsByCourseId"];
  };
  "/exercises": {
    get: operations["getAllExerciseByCourseId"];
  };
  "/exercises/{exerciseId}": {
    get: operations["getExerciseById"];
    delete: operations["deleteExerciseById"];
  };
  "/exercises/{exerciseId}/all-submission": {
    get: operations["getAllSubmissionByExerciseId"];
  };
  "/exercises/submit/{submissionId}": {
    get: operations["getStudentSubmission"];
  };
  "/exercises/submit/user/{userId}": {
    get: operations["getExerciseByUserId"];
  };
  "/exercises/preview/{exerciseId}": {
    get: operations["getPreviewExercise"];
  };
  "/exercises/code/run/{submissionId}": {
    get: operations["runCodeExercise_1"];
  };
  "/exercises/all-submission/user/{userId}": {
    get: operations["getAllStudentSubmission"];
  };
  "/courses/{courseId}": {
    get: operations["getById_2"];
    delete: operations["deleteById_2"];
  };
  "/courses/user/{userId}": {
    get: operations["getCourseByUserId"];
  };
  "/auth/check-session/user": {
    get: operations["checkSessionUser"];
  };
  "/auth/check-session/admin": {
    get: operations["checkSessionAdmin"];
  };
  "/groups/{groupId}/student": {
    delete: operations["deleteStudentInGroup"];
  };
  "/courses/unEnrollment": {
    delete: operations["unEnrollUserInCourse"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ChangePasswordRequest: {
      userId?: string;
      oldPassword?: string;
      newPassword?: string;
    };
    UpdateTopicRequest: {
      topicId: string;
      topicName: string;
      description?: string;
      showAll?: boolean;
    };
    UpdateGroupRequest: {
      groupName?: string;
    };
    QuizChoice: {
      choiceId?: string;
      content: string;
    };
    QuizQuestion: {
      questionId?: string;
      title: string;
      description: string;
      choices: components["schemas"]["QuizChoice"][];
      answers: components["schemas"]["QuizChoice"][];
    };
    UpdateQuizExerciseRequest: {
      exerciseId: string;
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      questions?: components["schemas"]["QuizQuestion"][];
    };
    UpdateFileExerciseRequest: {
      exerciseId: string;
      topicId: string;
      exerciseName: string;
      key?: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      question: string;
    };
    GradeSubmission: {
      submissionId: string;
      /** Format: float */
      score: number;
      comment?: string;
    };
    UpdateEssayExerciseRequest: {
      exerciseId: string;
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      question: string;
    };
    TestCase: {
      testcaseId?: string;
      exerciseId?: string;
      input?: string;
      output?: string;
      /** Format: int32 */
      points?: number;
    };
    UpdateCodeExerciseRequest: {
      exerciseId: string;
      topicId?: string;
      exerciseName?: string;
      key?: string;
      /** Format: date-time */
      startTime?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int32 */
      durationTime?: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      type?: string;
      description?: string;
      /** Format: double */
      timeLimit?: number;
      /** Format: int32 */
      memoryLimit?: number;
      allowedLanguageIds?: string[];
      /** Format: double */
      points?: number;
      template?: string;
      testCases?: components["schemas"]["TestCase"][];
    };
    UpdateCourseRequest: {
      courseId: string;
      courseName?: string;
      semester?: string;
      enrollKey?: string;
      description?: string;
      teacherId?: string;
    };
    UpdateStudentsToCourseRequest: {
      courseId: string;
      studentIds?: string[];
    };
    forgetPasswordRequest: {
      userId?: string;
      password?: string;
    };
    CreateUserRequest: {
      name: string;
      email: string;
      username: string;
      role: string;
    };
    CreateTopicRequest: {
      courseId: string;
      topicName: string;
      description?: string;
    };
    CreatePermissionTopicRequest: {
      topicId: string;
      groupIds?: string[];
      showAll?: boolean;
    };
    CreateMaterialRequest: {
      materialName: string;
      materialType: string;
      topicId: string;
      url?: string;
      description?: string;
      /** Format: binary */
      file?: string;
    };
    CreatePermissionMaterialRequest: {
      materialId: string;
      groupIds?: string[];
      showAll?: boolean;
    };
    CreateGroupRequest: {
      courseId: string;
      groupName: string;
    };
    CreateGroupStudentRequest: {
      studentIds: string[];
      description?: string;
      groupId: string;
    };
    CreatePermissionExerciseRequest: {
      groupIds?: string[];
      showAll?: boolean;
      exerciseId?: string;
    };
    CreateQuizExerciseRequest: {
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      questions: components["schemas"]["QuizQuestion"][];
    };
    CreateQuizSubmissionRequest: {
      studentId: string;
      exerciseId: string;
      submission?: components["schemas"]["QuizAnswers"][];
      teacherComment?: string;
    };
    QuizAnswers: {
      quizAnswerId?: string;
      questionId: string;
      answers: components["schemas"]["QuizChoice"][];
    };
    CreateFileExerciseRequest: {
      topicId: string;
      exerciseName: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      question: string;
    };
    CreateFileSubmissionRequest: {
      studentId: string;
      exerciseId: string;
    };
    CreateEssayExerciseRequest: {
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt?: number;
      exerciseDescription?: string;
      question: string;
    };
    CreateEssaySubmissionRequest: {
      studentId: string;
      exerciseId: string;
      submission?: string;
    };
    GetDetailExerciseRequest: {
      exerciseId: string;
      studentId: string;
      key: string;
    };
    CreateCodeExerciseRequest: {
      topicId: string;
      exerciseName: string;
      key: string;
      /** Format: date-time */
      startTime: string;
      /** Format: date-time */
      endTime: string;
      /** Format: int32 */
      durationTime: number;
      /** Format: int32 */
      reAttempt: number;
      description: string;
      allowedLanguageIds: string[];
      /** Format: double */
      points: number;
      testCases: components["schemas"]["TestCase"][];
      template?: string;
    };
    SubmitCodeExerciseRequest: {
      studentId: string;
      exerciseId: string;
      languageId: string;
      source: string;
    };
    CodeRunRequest: {
      studentId: string;
      exerciseId: string;
      languageId: string;
      source: string;
    };
    CreateCourseRequest: {
      courseName: string;
      semester?: string;
      description?: string;
      teacherId: string;
    };
    AddStudentToCourseRequest: {
      studentIds?: string[];
      courseId: string;
    };
    ImportStudentToCourseRequest: {
      courseId: string;
      /** Format: binary */
      file: string;
    };
    CourseEnrollmentRequest: {
      courseId: string;
      studentId: string;
      enrollmentKey: string;
    };
    SendOTPRequest: {
      userName?: string;
    };
    LoginRequest: {
      userName?: string;
      password?: string;
    };
    CheckOTPRequest: {
      otp?: string;
    };
    UpdateUserRequest: {
      userId: string;
      updatedName?: string;
      updatedEmail?: string;
      updatedUsername?: string;
      updatedPassword?: string;
      updatedRole?: string;
      /** Format: date-time */
      createdDate?: string;
    };
    UpdateMaterialRequest: {
      materialId: string;
      description?: string;
      checkAll?: boolean;
    };
    RemoveStudentFromCourseRequest: {
      studentId: string;
      courseId: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  changePassword: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChangePasswordRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllTopicsByCourseId: {
    parameters: {
      query: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateTopic: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateTopicRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createTopic: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTopicRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getGroupById: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateGroupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateQuizExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateQuizExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createQuizExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateQuizExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateFileExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateFileExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createFileExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFileExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  gradeFileSubmission: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GradeSubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateEssayExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateEssayExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createEssayExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEssayExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  gradeEssaySubmission: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GradeSubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateCodeExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCodeExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  gradeCodeSubmission: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GradeSubmission"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAll: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateById: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createOne_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateStudentsInCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStudentsToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateUserPassword: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["forgetPasswordRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getUsersByRoleOrAll: {
    parameters: {
      query?: {
        role?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateById_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  importUsersByExcel: {
    requestBody?: {
      content: {
        "application/json": {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getPublicGroups: {
    parameters: {
      query: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addViewPermission: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePermissionTopicRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  removeViewPermission: {
    parameters: {
      query: {
        topicId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createOne: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          request?: components["schemas"]["CreateMaterialRequest"];
          /** Format: binary */
          file?: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  updateByMaterialAndTopicId: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateMaterialRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addViewPermission_1: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePermissionMaterialRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  removeViewPermission_1: {
    parameters: {
      query: {
        materialId: string;
        groupIds: string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  exampleRq: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  createGroup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentsToGroup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupStudentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addPermissionExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePermissionExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitQuizExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateQuizSubmissionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitFileExercise: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          request?: components["schemas"]["CreateFileSubmissionRequest"];
          /** Format: binary */
          file?: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitEssayExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEssaySubmissionRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getExerciseDetail: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GetDetailExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  submitCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubmitCodeExerciseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  runCodeExercise: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CodeRunRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentToCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddStudentToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_3: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RemoveStudentFromCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  addStudentsToCourse: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ImportStudentToCourseRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  importCoursesByExcel: {
    requestBody?: {
      content: {
        "application/json": {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  enrollUserToCourse: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CourseEnrollmentRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  sendOTP: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendOTPRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  Logout: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  signInUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  signInAdmin: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkOTP: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CheckOTPRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById: {
    parameters: {
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById: {
    parameters: {
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getUserByUserName: {
    parameters: {
      query: {
        role: string;
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getTopic: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteTopic: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getTopicByUserId: {
    parameters: {
      query: {
        courseId: string;
      };
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  pingAPI: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById_1: {
    parameters: {
      path: {
        materialId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_1: {
    parameters: {
      path: {
        materialId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getMaterialsByTopicId: {
    parameters: {
      path: {
        topicId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getStudentNotInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getStudentInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getGroupsByCourseId: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllExerciseByCourseId: {
    parameters: {
      query: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getExerciseById: {
    parameters: {
      path: {
        exerciseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteExerciseById: {
    parameters: {
      query: {
        type: string;
      };
      path: {
        exerciseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllSubmissionByExerciseId: {
    parameters: {
      query: {
        type: string;
      };
      path: {
        exerciseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getStudentSubmission: {
    parameters: {
      query: {
        type: string;
      };
      path: {
        submissionId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getExerciseByUserId: {
    parameters: {
      query: {
        exerciseId: string;
        type: string;
      };
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getPreviewExercise: {
    parameters: {
      query: {
        studentId: string;
      };
      path: {
        exerciseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  runCodeExercise_1: {
    parameters: {
      query: {
        userId: string;
      };
      path: {
        submissionId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getAllStudentSubmission: {
    parameters: {
      query: {
        courseId: string;
      };
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getById_2: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteById_2: {
    parameters: {
      path: {
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  getCourseByUserId: {
    parameters: {
      path: {
        userId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkSessionUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  checkSessionAdmin: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  deleteStudentInGroup: {
    parameters: {
      path: {
        groupId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
  unEnrollUserInCourse: {
    parameters: {
      query: {
        userId: string;
        courseId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "*/*": Record<string, never>;
        };
      };
    };
  };
}
